name: Deploy to Heroku

on:
  push:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Check if frontend exists and install dependencies
      run: |
        if [ -f "frontend/package.json" ]; then
          echo "Frontend found, installing dependencies..."
          cd frontend
          npm install
          npm run build
          cd ..
          mkdir -p static
          cp -r frontend/build/* static/ || echo "No build output to copy"
        else
          echo "No frontend directory found, skipping frontend build"
          mkdir -p static
        fi

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Collect static files
      run: |
        python manage.py collectstatic --noinput

    - name: Install Heroku CLI manually
      run: |
        curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
        export PATH="/usr/local/bin:$PATH"
        heroku --version

    - name: Login to Heroku Container Registry
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        export PATH="/usr/local/bin:$PATH"
        echo $HEROKU_API_KEY | heroku auth:token
        heroku container:login

    - name: Build and Push Docker Image
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        export PATH="/usr/local/bin:$PATH"
        heroku container:push web --app ${{ secrets.HEROKU_APP_NAME }}
        heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}