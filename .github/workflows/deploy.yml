name: Deploy to Heroku

on:
  push:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Check if frontend exists and install dependencies
      run: |
        if [ -f "frontend/package.json" ]; then
          echo "Frontend found, installing dependencies..."
          cd frontend
          npm install
          npm run build
          cd ..
          mkdir -p static templates
          if [ -d "frontend/build" ]; then
            cp -r frontend/build/* static/
            # Convert React's index.html to Django template using Python
            python3 -c "
import re
with open('frontend/build/index.html', 'r') as f:
    content = f.read()
content = re.sub(r'/static/([^\"]+)\"', r'{% static \"\1\" %}\"', content)
content = re.sub(r'href=\"([^\"]*\.css)\"', r'href=\"{% static \"\1\" %}\"', content)
content = re.sub(r'src=\"([^\"]*\.js)\"', r'src=\"{% static \"\1\" %}\"', content)
final_content = '{% load static %}\n' + content
with open('templates/index.html', 'w') as f:
    f.write(final_content)
"
            echo "Frontend build copied and template created"
          else
            echo "No frontend build directory found"
            touch static/.gitkeep
          fi
        else
          echo "No frontend directory found, skipping frontend build"
          mkdir -p static
          touch static/.gitkeep
        fi

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Collect static files
      run: |
        python manage.py collectstatic --noinput

    - name: Deploy to Heroku
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
      run: |
        curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
        export PATH="/usr/local/bin:$PATH"

        # Set git config
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"

        # Login to Heroku
        echo $HEROKU_API_KEY | heroku auth:token

        # Set up git remote with authentication
        git remote add heroku https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git

        # Stage all files
        git add .
        git commit -m "Deploy from GitHub Actions" || echo "No changes to commit"

        # Deploy to Heroku
        git push heroku HEAD:main --force